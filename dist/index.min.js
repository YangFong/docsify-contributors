window.$docsify.plugins=[].concat((t,o)=>{let{repo:a,contributors:e={}}=o.config;if(a=e.repo||a){const r={color:"#ffffff",bgColor:"#404040",isRound:!0,extra:""},i={margin:"0.5em",isRound:!0,size:30},n=a.split("/")[1]+"-contributors",{ignores:s,style:l,image:c}={ignores:e.ignores??[],style:{...r,...e.style??{}},image:{...i,...e.image??{}}};t.init(()=>{let{color:t,bgColor:e,isRound:a,extra:r}=l;var o=c["margin"];c.isRound||(a=!1);const i=document.createElement("style");i.innerText=`
      .${n} {
        display: flex;
        flex-wrap: wrap;
        padding-top: 1em;
      }

      .${n} a {
        position: relative;
        margin: ${o};
      }

      .${n} a::before, .${n} a::after {
        position: absolute;
        box-sizing: border-box;
        transition: 100ms;
        opacity: 0;
        z-index: -1;
        background-color: ${e};
      }

      .${n} a::before {
        content: "contributor" attr(dada-title);
        top: -100%;
        left: 50%;
        transform: translate(-50%, -100%);
        min-width: max-content;
        height: 27px;
        font-size: 12px;
        border-radius: 5px;
        padding: 0.5em;
        color: ${t};
      }

      .${n} a::after {
        content: '';
        top: calc(-100% + 26.5px);
        left: 50%;
        transform: translate(-50%, -500%);
        width: 20px;
        height: 7px;
        clip-path: path("m0 0 l10 7 l10 -7z");
      }

      .${n} a:hover::before,
      .${n} a:hover::after  {
        z-index: 2;
        opacity: 1;
        transform: translate(-50%, 0%);
      }

      .${n} a img {
        border-radius: ${a?50:0}%;
      }

      ${r}
    `,document.head.append(i)}),t.afterEach((t,e)=>{var a,r=o.route["file"];return a=r,s.some(t=>t==="/"+a)?e(t):e(t+`<div class="${n}"></div>`)}),t.doneEach(async()=>{e="."+n;const t=document.querySelector(e);var e;null!=t&&(e=o.route["file"],e=await(async t=>{const e=await fetch(`https://api.github.com/repos/${a}/commits?path=/${t}&per_page=100`);return e.json()})(e),t.innerHTML=(t=>{const r=c["size"];return t.map(({url:t,img:e,name:a})=>`
          <a href="${t}" target="_blank" dada-title="@${a}">
            <img src="${e}" width="${r}" height="${r}" alt="@${a}">
          </a>`).join("")})((t=>{const e=new Set;return t.map(({author:t})=>({url:t.html_url,img:t.avatar_url,name:t.login})).filter(({name:t})=>!e.has(t)&&(e.add(t),!0))})(e)))})}},window.$docsify.plugins);